View(df_chain_desc)
source('~/files/ods/weekly_option/script/01_wrangler_market.R', echo=TRUE)
View(df_chain)
source('~/files/ods/weekly_option/script/01_wrangler_market.R', echo=TRUE)
write_csv(df_chain, "spy_weekly_2014_2018_chain_desc.csv")
write_csv(df_chain_hist, "spy_weekly_2014_2018_chain_hist.csv")
write_csv(df_opt_hist, "spy_weekly_2014_2018_opt_hist.csv")
df_chain_desc <-
read_csv("data_output/spy_weekly_2014_2018_chain_desc.csv")
df_chain_hist <-
read_csv("data_output/spy_weekly_2014_2018_chain_hist.csv")
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
ggplot() +
geom_line(aes(x=trade_date, y=bid_swap_rate)) +
geom_line(aes(x=trade_date, y=realized_vol))
# this is the graph of execution date bid swap rates
# it's an interesting visual, but it's hard to garner much
# data integrity
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
ggplot() +
geom_line(aes(x=trade_date, y=bid_swap_rate), color="red") +
geom_line(aes(x=trade_date, y=realized_vol), color="blue")
# the purpose of this script is to serve as sketches for my
# data integrity testing for weekly option data
######################
## loading packages ##
######################
library(tidyverse)
library(lubridate)
library(bizdays)
library(tidyquant)
# initializing bizdays libraries
load_rmetrics_calendars(2000:2020)
bizdays.options$set(default.calendar="Rmetrics/NYSE")
#####################
## reading in data ##
#####################
df_chain_desc <-
read_csv("data_output/spy_weekly_2014_2018_chain_desc.csv")
df_chain_hist <-
read_csv("data_output/spy_weekly_2014_2018_chain_hist.csv")
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("SPY", from = "2014-01-03", to = "2018-12-29")
#############################
## checks on df_chain_desc ##
#############################
# 1) make sure there are no chains with less than four days to expiration
df_chain_desc %>%
filter(d2x < 4)
# 2) make sure there are at least 6 options per chain
df_chain_desc %>%
filter(num_opts < 6)
# 3) make sure exec_day_volume is greater than 1000
df_chain_desc %>%
filter(exec_day_volume < 1000)
##########################
## checks on chain hist ##
##########################
dt_all <- bizseq(ymd(20140103), ymd(20181228))
df_td_all <- tibble(trade_date = dt_all)
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
#df_exec_day_iv <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution)
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
#df_exec_day_iv <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution)
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
#df_exec_day_iv <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
select(expiration, execution, bid_swap_rate, realized_vol)
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
df_real_iv_comparison <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
select(expiration, execution, bid_swap_rate, realized_vol) %>%
mutate(
realized_change = realize_vol - lag(realized_vol)
, iv_change = bid_swap_rate - lag(bid_swap_rate)
)
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
#df_real_iv_comparison <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
select(expiration, execution, bid_swap_rate, realized_vol) %>%
mutate(
realized_change = realize_vol - lag(realized_vol)
, iv_change = bid_swap_rate - lag(bid_swap_rate)
)
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
#df_real_iv_comparison <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
select(expiration, execution, bid_swap_rate, realized_vol) %>%
mutate(
realized_change = realized_vol - lag(realized_vol)
, iv_change = bid_swap_rate - lag(bid_swap_rate)
)
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
df_real_iv_comparison <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
select(expiration, execution, bid_swap_rate, realized_vol) %>%
mutate(
realized_change = realized_vol - lag(realized_vol)
, iv_change = bid_swap_rate - lag(bid_swap_rate)
)
#df_real_iv_comparison <-
df_real_iv_comparison %>%
mutate(
subseq_iv_change = lead(iv_change)
)
df_real_iv_comparison <-
df_real_iv_comparison %>%
mutate(
subseq_iv_change = lead(iv_change)
)
df_real_iv_comparison %>%
arrange(desc(realized_change - iv_change))
source('~/files/ods/weekly_option/script/01_wrangler_market.R', echo=TRUE)
View(df_chain)
source('~/files/ods/weekly_option/script/01_wrangler_market.R', echo=TRUE)
write_csv(df_chain, "spy_weekly_2014_2018_chain_desc.csv")
write_csv(df_chain_hist, "spy_weekly_2014_2018_chain_hist.csv")
write_csv(df_opt_hist, "spy_weekly_2014_2018_opt_hist.csv")
df_chain_desc <-
read_csv("data_output/spy_weekly_2014_2018_chain_desc.csv")
df_chain_hist <-
read_csv("data_output/spy_weekly_2014_2018_chain_hist.csv")
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
df_real_iv_comparison <-
df_chain_hist %>%
left_join(
df_chain_desc %>% select(expiration, execution, realized_vol)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
select(expiration, execution, bid_swap_rate, realized_vol) %>%
mutate(
realized_change = realized_vol - lag(realized_vol)
, iv_change = bid_swap_rate - lag(bid_swap_rate)
)
df_real_iv_comparison <-
df_real_iv_comparison %>%
mutate(
subseq_iv_change = lead(iv_change)
)
df_real_iv_comparison %>%
arrange(desc(realized_change - iv_change))
# there should be a spike in implied volatility the week after there
# is a spike in implied volatility.  Check that this is the case.
df_real_iv_comparison <-
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
select(
expiration, execution, bid_swap_rate, realized_vol, return
) %>%
mutate(
realized_change = realized_vol - lag(realized_vol)
, iv_change = bid_swap_rate - lag(bid_swap_rate)
)
df_real_iv_comparison <-
df_real_iv_comparison %>%
mutate(
subseq_iv_change = lead(iv_change)
)
df_real_iv_comparison %>%
arrange(desc(realized_change - iv_change))
df_real_iv_comparison
df_real_iv_comparison
df_real_iv_comparison %>%
filter(realized_change > 0) %>%
filter(return < 0) %>%
filter(subseq_iv_change < 0)
df_real_iv_comparison %>%
filter(realized_change > 0) %>%
filter(return < 0) %>%
filter(subseq_iv_change < 0)
df_real_iv_comparison %>%
filter(realized_change > 0) %>%
#filter(return < 0) %>%
filter(subseq_iv_change < 0)
View(df_real_iv_comparison)
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("VXEFA", from = "2014-01-03", to = "2018-12-29")
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("VIX", from = "2014-01-03", to = "2018-12-29")
View(df_underlying_px)
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("VXN", from = "2014-01-03", to = "2018-12-29")
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("^VXN", from = "2014-01-03", to = "2018-12-29")
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("^VIX", from = "2014-01-03", to = "2018-12-29")
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("^VXD", from = "2014-01-03", to = "2018-12-29")
###################################################
## grabbing price data from yahoo with tidyquant ##
###################################################
df_underlying_px <-
tq_get("^VXEFA", from = "2014-01-03", to = "2018-12-29")
df_vol_index <-
tq_get("^VIX", from = "2014-01-03", to = "2018-12-29")
View(df_vol_index)
df_real_iv_comparison %>%
filter(realized_change > 0) %>%
filter(return < 0) %>%
filter(subseq_iv_change < 0)
df_real_iv_comparison %>%
filter(realized_change > 0) %>%
filter(return < 0) %>%
filter(subseq_iv_change < 0.02)
df_real_iv_comparison %>%
filter(realized_change > 0) %>%
filter(return < 0) %>%
filter(subseq_iv_change < -0.02)
df_real_iv_comparison %>%
filter(realized_change > 0) %>%
filter(return < 0) %>%
filter(subseq_iv_change < -0.02)
df_real_iv_comparison %>%
filter(realized_change > 0.05) %>%
filter(return < 0) %>%
filter(subseq_iv_change < -0.02)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(data, adjusted)
, by = c("trade_date" = "date")
)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(data, adjusted)
, by = c("trade_date = date")
)
View(df_vol_index)
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(date, adjusted)
, by = c("trade_date" = "date")
)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(date, vol_index = adjusted)
, by = c("trade_date" = "date")
)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_index_comparison <-
df_chain_hist %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(date, vol_index = adjusted)
, by = c("trade_date" = "date")
)
View(df_index_comparison)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_index_comparison <-
df_chain_hist %>%
select(underlying, expiration, execution, bid_swap_rate) %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(date, vol_index = adjusted)
, by = c("trade_date" = "date")
)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_index_comparison <-
df_chain_hist %>%
select(underlying, expiration, bid_swap_rate) %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(date, vol_index = adjusted)
, by = c("trade_date" = "date")
)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_index_comparison <-
df_chain_hist %>%
#select(underlying, expiration, bid_swap_rate) %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(date, vol_index = adjusted)
, by = c("trade_date" = "date")
)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_index_comparison <-
df_chain_hist %>%
select(underlying, expiration, trade_date, bid_swap_rate) %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>% select(date, vol_index = adjusted)
, by = c("trade_date" = "date")
)
###############################################################
## checking the bid-IVs are consistent with volatility index ##
###############################################################
df_index_comparison <-
df_chain_hist %>%
select(underlying, expiration, trade_date, bid_swap_rate) %>%
left_join(
df_chain_desc %>%
select(expiration, execution, realized_vol, return)
, by = "expiration"
) %>%
filter(trade_date == execution) %>%
left_join(
df_vol_index %>%
mutate(vol_index = adjusted / 100) %>%
select(date, vol_index)
, by = c("trade_date" = "date")
)
df_index_comparison %>%
arrange(desc(abs(bid_swap_rate - vol_index)))
df_index_comparison %>%
arrange(desc(abs(bid_swap_rate - vol_index)))
df_index_comparison <-
df_index_comparison %>%
mutate(vol_diff = bid_swap_rate - vol_index)
df_index_comparison %>%
filter(abs(vol_diff) > 0.05)
df_index_comparison %>%
filter(abs(vol_diff) > 0.05)
wti_price_usd <- tq_get("DCOILWTICO", get = "economic.data")
wti_price_usd <- tq_get("VIXCLS", get = "economic.data")
df_opt_hist <-
read_csv("data_output/spy_weekly_2014_2018_opt_hist.csv")
# should be able to get this from FRED use VIXCLS
df_vol_index <-
tq_get(
"^VIX"
, get = "economic.data"
, from = "2014-01-03"
, to = "2018-12-29"
)
# should be able to get this from FRED use VIXCLS
df_vol_index <-
tq_get(
"VIXCLS"
, get = "economic.data"
, from = "2014-01-03"
, to = "2018-12-29"
)
View(df_vol_index)
#####################
## all trade dates ##
#####################
df_td_all <-
bizseq(from = "2014-01-03", to = "2018-12-29")
#####################
## all trade dates ##
#####################
df_td_all <-
bizseq(from = "2014-01-03", to = "2018-12-29")
